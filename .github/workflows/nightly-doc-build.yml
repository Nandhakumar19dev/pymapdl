name: Nightly Documentation Build

on:
  schedule:  # UTC at 0400
    - cron:  '0 4 * * *'
  workflow_dispatch:

jobs:
  nightly_docs_build:
    runs-on: ubuntu-20.04
    timeout-minutes: 25

    env:
      DISPLAY: ':99.0'
      PYMAPDL_PORT: 21000  # default won't work on azure
      PYMAPDL_START_INSTANCE: FALSE
      PYANSYS_OFF_SCREEN: True

    services:
      # Label used to access the service container
      mapdl:
        # Docker Hub image
        image: ghcr.io/pyansys/pymapdl/mapdl:v21.2.1
        ports:
          - 21000:50052  # main service
          - 21001:50055  # DB service
        # ANSYS_lOCK: Whether or not create a lock file, We disable this to allow MAPDL
        # restart without issue after it failed.
        # KMP_AFFINITY - https://github.com/pyansys/pymapdl/issues/1213
        env:
          ANSYSLMD_LICENSE_FILE: 1055@${{ secrets.LICENSE_SERVER }}
          ANSYS_LOCK: OFF
          KMP_AFFINITY: disabled

        options: >-
          --restart always
          --health-cmd="ps aux | grep "[/]ansys_inc/.*ansys\.e.*grpc" -q && echo 0 || echo 1"
          --health-interval=0.5s
          --health-retries=4
          --health-timeout=0.5s
          --health-start-period=10s

    steps:
      - uses: actions/checkout@v2

      # used for documentation deployment
      - name: Get Bot Application Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.BOT_APPLICATION_ID }}
          application_private_key: ${{ secrets.BOT_APPLICATION_PRIVATE_KEY }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install OS packages
        run: |
          sudo apt-get update
          sudo apt-get install libgl1-mesa-glx xvfb pandoc -qy

      - name: Install ansys-mapdl-core
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/requirements_build.txt
          pip install .
          xvfb-run python -c "from ansys.mapdl import core as pymapdl; print(pymapdl.Report())"

      - name: Login in Github Container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Build Documentation
        run: |
          pip install -r requirements/requirements_docs.txt
          xvfb-run make -C doc html

      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          repository-name: pyansys/pymapdl-dev-docs
          token: ${{ steps.get_workflow_token.outputs.token }}
          BRANCH: gh-pages
          FOLDER: doc/build/html
          CLEAN: true

      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v1
        with:
          dest: './logs-nightly-docs'

      - name: Display files structure
        if: failure()
        run: ls -R

      - name: Collecting documentation logs
        if: failure()
        continue-on-error: true
        run: |
          cp ./doc/build/latex/*.log ./logs-nightly-docs
          cp ./doc/build/latex/*.out ./logs-nightly-docs

      - name: Tar logs
        if: failure()
        run: tar cvzf ./logs-docs.tgz ./logs-docs

      - name: Upload logs to GitHub
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: logs-nightly-docs.tgz
          path: ./logs-nightly-docs.tgz

      - name: Notify if fail
        uses: skitionek/notify-microsoft-teams@master
        if: ${{ failure() }}
        with:
          webhook_url: ${{ secrets.TEAM_HOOK }}
          needs: ${{ toJson(needs) }}
          job: ${{ toJson(job) }}
          steps: ${{ toJson(steps) }}
          overwrite: "{
            title: `${workflow} failed.`, 
            }"